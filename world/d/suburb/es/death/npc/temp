// gargoyle.c

#include <ansi.h>
#include <login.h>

inherit NPC;

string *death_msg = ({
	HIW "フ礚盽弧笵R侈T穝ㄓ骸MAsぐ或WrS\n\n" NOR,
	HIW "フ礚盽ノ_钵翰触╪帝AMn钩璶莠铵A氦@ち骸C\n\n" NOR,
	HIW "フ礚盽u蟆v氦@羘M眖砈い鼻X@セ钩眀U邯F﹁陆莸邸C\n\n" NOR,
	HIW "フ礚盽蛔WUlM弧笵R玿S锭关ゼ荷S缁颔i唷S\n\n" NOR,
	HIW "フ礚盽穔F穔繷M价笵R絵F絵FMAǐaC\n\n"
		"@殉抱N嚎@铭鸬MX瞷M堙枝a]瞅FAC\n\n" NOR,
});

void create()
{
	set_name("フ礚盽", ({ "white gargoyle", "gargoyle" }) );
	set("long",
		"フ礚盽帝害蘩Y傈帝AM亥摘毫yW荬％Xヴ蟪攉惬s贾C\n");
	set("attitude", "peaceful");
	set("chat_chance", 15);
	set("chat_msg", ({
		(: this_object(), "random_move" :),
		"フ礚盽祇X@皚钩〥u毫n怠M讽L祇瞷Aタ猔跌帝L寒森浴M傈FA@泊C\n",
		"フ礚盽р害蘩YXㄓM絯絯a籕F籕郅vSフS氦猥C\n"
	}) );
	set("age", 217);
	set("combat_exp", 20000);
	set("max_gin", 900);
	set("max_kee", 900);
	set("max_sen", 200);
	set_skill("dodge", 40);
	set_skill("unarmed", 40);
	setup();
}

void init()
{
	::init();
	if( !previous_object()
	||	!userp(previous_object())
	||	wizardp(previous_object()) ) return;
	call_out( "death_stage", 5, previous_object(), 0 );
}

void death_stage(object ob, int stage)
{
	if( !ob || !present(ob) ) return;

	tell_object(ob, death_msg[stage]);
	if( ++stage < sizeof(death_msg) ) {
		call_out( "death_stage", 5, ob, stage );
		return;
	} else
		ob->reincarnate();

	ob->move(REVIVE_ROOM);
	message("vision",
		"A┛礛祇瞷玡宝hF@婴H紇Mぃ筁êH紇Sn钩w竒bê柑\n"
		"埭[FMu琌A@建S祇谋C\n", environment(ob), ob);
}


